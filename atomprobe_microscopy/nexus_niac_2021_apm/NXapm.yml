# kuehbacm at hu-berlin.de, 01/2022
# a draft version of a NeXus application definition for storing atom probe microscopy (atom probe tomography and field-ion microscopy) experiments
# the draft is strongly inspired by the instrument use case of the so-called local electrode atom probe (LEAP) of CAMECA/Ametek but can also handle
# community-built instrument like the Oxcart instrument of the Felfer group
category: application
doc: "Atom probe tomography and field-ion microscopy experiments."
symbols:
  doc: "The symbols used in the schema to specify e.g. dimensions of arrays"
  Nions: "Total number of ions collected"
  Ndldwires: "Total number of independent wires in the delay-line detector."
  Nsupport: "Number of support points for e.g. modeling peaks in the mass-to-charge-state ratio histogram."
  Nivecmax: "Maximum number of allowed atoms per (molecular) ion (fragment). Needs to match maximum_number_of_atoms_per_molecular_ion."
  Nranges: "Number of mass-to-charge-state-ratio range intervals mapped on this ion type."
(NXapm):
  (NXentry):
    # the NeXus default for application definitions wrt to the exists keyword is that it is required
    # so writing exists required can be omitted unless exists should be set to e.g. optional, recommended, or the [min, .., max, ..] syntax
    definition:
      doc: "Official NeXus NXDL schema to which this entry conforms."
      \@version:
        doc: "Version specifier which enables documentation of modifications to the schema."
    experiment_identifier:
      doc: "Ideally, a (globally) persistent unique identifier for referring to this experiment. The identifier is usually defined/issued by the facility, laboratory, or the principle investigator. The identifier enables to link experiments to e.g. proposals."
    experiment_description:
      exists: optional
      doc: "Possibility for leaving a free-text description about the experiment. Users are strongly advised to detail the sample history in the respective field and fill rather as completely as possible the fields of this application definition rather than writing these details in prose into this field here."
    start_time(NX_DATE_TIME):
      doc: "ISO 8601 formatted time code with local time zone offset to UTC information included when the experiment started. If the application demands that time codes in this section of the application definition should only be used for specifying when the experiment was performed - and the exact duration of the experiment is not relevant - this start time field should be used. Often though it is useful to specify a time interval, i.e. start_time and end_time, to allow for more detailed bookkeeping and interpretation of the experiment. The user should be aware that even with having both time instances specified it may not be advisable to infer how long the experiment took or for how long data were acquired. More detailed timing data over the course of the experiment have to be collected for such a detailed bookkeeping."
    end_time(NX_DATE_TIME):
      exists: recommended
      doc: "ISO 8601-formatted time code with local time zone offset to UTC included when the experiment ended."
    # NEW ISSUE: fields like duration need a clearer description as to how these quantities should be defined. Most atom probers do not care for this other than getting an approximate hour-accurate estimate of the time how long it took to evaporate the specimen.
    program:
      doc: "Commercial or otherwise given name to the program that was used to acquire/measure the dataset. Atom probe microscopy experiments are nowadays still in most cases controlled via commercial software. These are often designed as integrated acquisition and instrument control software. For AMETEK/Cameca local electrode atom probe (LEAP) instruments the least processed (rawest) numerical results and metadata are stored in so-called RHIT and HITS files, which are proprietary. Supplementary metadata are kept in a database which is connected to the control software. RHIT and HITS are proprietary binary file formats whose content must not be accessed with software other than of AMETEK (IVAS/AP Suite). In effect, RHIT and HITS store the experiment in a closed manner that is practically useless for users unless they have access to the commercial software. To arrive at a state that atom probe microscopy delivers a dataset with which one can study reconstructed atomic position and do e.g. composition analyses or other post-processing analysis tasks, these raw data have to be processed. Therefore, it is necessary that for an application definition to be useful, details about the physical acquisition of the raw data and all its processing steps have to be stored. With this a user can create derived quantities like ion hit positions (on the detector), calibrated time-of-flight data. These derived quantities are also need to obtain calibrated mass-to-charge-state ratios, and finally the tomographically reconstructed atomic positions. In many cases cases, an APM dataset is useful only if it gets post-processed via so-called ranging. Ranging defines a set of rules how one map between time-of-flight and mass-to-charge data on ion types, i.e. labels. In turn, these labels decode elemental identities and resolve isotopes. All these steps are in most cases performed using commercial software. Frequently, though, ranging and post-processing is also performed with (open-source) research software. Therefore, there is strictly speaking not a single program used in atom probe not even for the early data acquisition and processing stages until one arrives at a useful reconstructed and ranged dataset. Therefore, the application definition documents not only the measurement but also these key post-processing steps."
      \@version:
        doc: "Ideally program version plus build number, or commit hash or description of ever persistent resources where the source code of the program and build instructions can be found so that the program can be configured ideally in such a manner that the result file is numerically recreatable in the same deterministic manner."
    run_number(NX_CHAR):
      doc: "Not the specimen name or the experiment identifier but the identifier through which the experiment is referred to in the control software. For LEAP instruments it is recommended to use the IVAS/AP Suite run number. For other instruments, such as the one from Stuttgart or Oxcart from Erlangen, or the instruments in Rouen, use the identifier that is closest in meaning to the LEAP run number. As a destructive microscopy method, a run can be performed only once. It is possible, however, to interrupt a run and restart data acquisition while still using the same specimen. In this case, each evaporation run needs to be distinguished with different run numbers. # This is how most atom probe groups handle it across the globe."
    experiment_documentation(NXnote):
      exists: optional
      doc: "Binary container for a file or a compressed collection of files which can be used to add further descriptions and details to the experiment. The container can hold e.g. a ppt, pdf, latex, txt, image, or zip archive ...)."
    thumbnail(NXnote):
      exists: recommended
      doc: "A small image that is representative of the entry. For reconstructed datasets it is recommended to display the reconstruction as a 640x480 pixel jpeg image. Adding a scale bar to that image is recommended but not required as the main purpose of the thumbnail is to provide e.g. thumbnail images for displaying them in data repositories."
      \@type:
    operation_mode(NX_CHAR):
      doc: "What type of atom probe microscope experiment is performed. This field can be used e.g. by materials database systems to qualitatively filter experiments."
      enumeration: ["leap", "apt", "fim", "apt_and_fim"]
    operator(NXuser):
      exists: [min, 1]
      doc: "Contact information of at least the user of the instrument who measured this specimen or the principle investigator who performed this experiment. Adding multiple users if relevant is recommended."
      name:
        doc: "Given (first) name and surname of the user."
      affiliation:
        exists: recommended
        doc: "Name of the affiliation of the user at the point in time when the experiment was performed."
      address:
        exists: recommended
        doc: "Postal address of the affiliation."
      email:
        doc: "Email address of the user at the point in time when the experiment was performed. Giving the most permanently used email is recommended."
      orcid:
        exists: recommended
        doc: "Globally unique identifier of the user as offers by services like ORCID or ResearcherID."
      telephone_number:
        exists: recommended
        doc: "(Business) (tele)phone number of the user at the point in time when the experiment was performed."
      role:
        exists: recommended
        doc: "Which role does the user have in the place, or did the user hold when, the experiment was performed (e.g. technician operating the microscope, student, postdoc, principle investigator, guest ...)."
      # NEW ISSUE: social media
    specimen(NXsample):
      name:
        doc: "Descriptive name or identifier with which to distinguish the specimen from all others and especially the parts from where it was cut. In cases where the specimen was e.g. site-specifically cut from samples or in cases of an instrument session during which multiple specimens are loaded, the name has to be descriptive enough to resolve which specimen on e.g. the microtip array was taken. The user is advised to store the details how specimens were cut/prepared from samples in the sample history."
      sample_history:
        doc: "Ideally, a reference to the location of or a (globally persistent) unique identifier of e.g. another file which should document ideally as many details as possible of the material, its microstructure, and its thermo-chemo-mechanical processing/preparation history. In the case that such a detailed history of the sample/specimen is not available, use this field as a free-text description to specify a sub-set of the entire sample history, i.e. what you would consider being the key steps and relevant information about the specimen, its material, microstructure, thermo-chemo-mechanical processing state and details of the preparation."
      preparation_date(NX_DATE_TIME):
        exists: recommended
        doc: "ISO8601 date and time with local time zone offset to UTC included when the specimen was prepared. Ideally report the end of the preparation, i.e. the last known time the measured specimen surface was actively prepared. Knowing when the specimen was exposed to e.g. specific atmosphere is especially required for environmentally sensitive material such as hydrogen-charged specimens or experiments including tracers with a short half-time. The user is advised to include these temporal details in the sample_history."
      short_title:
        exists: optional
        doc: "Possibility to give an abbreviation of the specimen name field."
      atom_types:
        doc: "Use Hill's system for listing elements of the periodic table which are inside or attached to the surface of the specimen and thus considered relevant from a scientific point. The purpose of the field is to offer materials database systems an opportunity to parse the relevant elements without having to interpret these from the sample history."
    (NXdata):
      doc: "Hard link to a location/locations in the hierarchy of the NeXus file where the data for default plotting are stored."
      # detector_stack(link):
      #  target: /entry/atom_probe/ion_impact_positions/hit_positions
        #handle default plotting
      # tomographic_reconstruction(link):
      #  target: /entry/atom_probe/reconstruction/reconstructed_positions
    atom_probe(NXinstrument):
      doc: "Metadata and numerical data of not only the microscope but also the lab in which this microscope is located. An atom probe microscope (experiment) is different compared to a large-scale facility accelerator or an electron microscope in at least two ways. First, ionized atoms and molecular ion(s fragments) (in the case of atom probe tomography) and (primarily) imaging gas ions (in the case of field ion microscopy) are accelerated towards a position-sensitive and time-of-flight taking detector system. Hence, there is no real probe/beam. Second, the specimen is the lens of an atom probe microscope. Therefore, the reference coordinate system that is usually referred to in NeXus (McStas coordinate system) is modified when using this application definition. Specifically, the reference coordinate system is defined such that it represents the specimen coordinate system. To be consistent with accelerator and microscopy techniques we define that the positive z-axis points outwards from the apex of the specimen into the vacuum, i.e. towards the detector. The coordinate system remains/is a right-handed one. Clockwise rotations are considered positive rotations."
      name:
        doc: "Given name of the microscope, e.g Raptor, Oxcart, One atom at a time."
      location:
        exists: recommended
        doc: "Geographic coordinates of the lab or the place where the instrument is installed using GEOREF geocodes ideally."
      instrument_manufacturer:
        exists: recommended
        doc: "Manufacturer of the entire instrument (e.g. AMETEK/Cameca) to enable e.g. queries in materials database systems for instrument manufacturers. Usually more technical details are needed though to specify the instrument, these should be written into instrument_model and instrument_capabilities."
      instrument_model:
        doc: "Manufacturer brand/model to enable e.g. queries about microscope models (e.g. LEAP3000XS)."
      instrument_identifier:
        exists: recommended
        doc: "Hardware name/serial number or hash identifier given by the manufacturer to identify the instrument."
      instrument_capability:
        exists: recommended
        doc: "Free-text list possibly multiple terms of functionalities which the instrument provides."
        # NEW ISSUE: Define a bag of controlled words and use only these.
      flight_path_length(NX_FLOAT):
        doc: "The space inside the atom probe that ions pass through when they leave the specimen and travel to the detector."
        unit: NX_LENGTH
        # NEW ISSUE: discussion depends on the type of instrument, straight flight path, curved
      analysis_chamber(NXchamber):
        exists: optional
      # NEW ISSUE: add and support I/O of further details
      load_lock_chamber(NXchamber):
        exists: optional
      # NEW ISSUE: add and support I/O of further details
      buffer_chamber(NXchamber):
        exists: optional
      # NEW ISSUE: add and support I/O of further details
      getter_pump(NXpump):
        exists: optional
      # NEW ISSUE: add and support I/O of further details
      roughening_pump(NXpump):
        exists: optional
      # NEW ISSUE: add and support I/O of further details
      turbomolecular_pump(NXpump):
        exists: optional
      # NEW ISSUE: add and support I/O of further details
      has_reflectron(NX_BOOLEAN):
        exists: recommended
      (NXreflectron):
        exists: recommended
        doc: "Device for reducing flight time differences of ions in ToF experiments."
        name:
          exists: recommended
          doc: "Given name."
        model:
          exists: recommended
          doc: "Given brand or model name by the manufacturer."
        serial_number:
          exists: recommended
          doc: "Given hardware name/serial number or hash identifier issued by the manufacturer."
        manufacturer_name:
          exists: recommended
          doc: "Given name of the manufacturer."
        description:
          exists: recommended
          doc: "Free-text field to specify further details about the reflectron. The quantity can inform for instance if the reflectron is flat or curved."
        (NXtransformations):
          exists: optional
          doc: "Affine transformation(s) which detail where the reflectron is located relative to e.g. the origin of the specimen space reference coordinate system. This group can also be used for specifying how the reflectron is rotated relative to the specimen axis. The purpose of these more detailed instrument descriptions is to support the creation of a digital twin of the instrument for computational science."
      flat_test_data(NXcollection):
        exists: recommended
        doc: "NEED FOR FURTHER DISCUSSIONS WITH APM COLLEAGUES WHAT IS RELEVANT HERE."
        # NEW ISSUE: the definition of flat test data should be included and documented
      counter_electrode(NXaperture):
        description:
          exists: recommended
          doc: An (ideally globally persistent) unique identifier, link, or text which gives further details.
      ion_detector(NXdetector):
        doc: "Details about the detector which is used to collect raw time-of-flight data and ion/hit impact positions."
        type:
          exists: recommended
          doc: "Description of the detector type. Specify if the detector is not the usual type of delay-line detectors."
          enumeration: ["mcp_dld", "phosphor_ccd"]
        name:
          exists: recommended
          doc: "Given name."
        model:
          exists: recommended
          doc: "Given brand or model name by the manufacturer."
        serial_number:
          exists: recommended
          doc: "Given hardware name/serial number or hash identifier issued by the manufacturer."
        manufacturer_name:
          exists: recommended
          doc: "Given name of the manufacturer."
        signal_amplitude(NX_FLOAT):
          exists: optional
          doc: "Amplitude of the signal detected on the multi-channel plate (MCP). This field should be used for storing the signal amplitude quantity within ATO files. The ATO file format is used primarily by the atom probe groups in Rouen, France."
          unit: NX_CURRENT
          dimensions:
            rank: 1
            dim: [[1, Nions]]
        (NXtransformations):
          exists: optional
          doc: "Affine transformation which aligns the Cartesian right-handed coordinate system which defines the detector space with the specimen space. In atom probe microscopy a frequently used choice is to discuss the so-called detector space image (stack). This is a stack of two-dimensional histograms of detected ions within a predefined evaporation ID interval. Typically, the set of ion evaporation sequence IDs is grouped into chunks. For each chunk a histogram of the ion hit positions on the detector is computed. This leaves the possibility for inconsistency between the so-called detector coordinate system and a specimen-affixed coordinate system. The transformation here resolves this ambiguity by specifying how the positive z-axes of either coordinate systems can be oriented."
      pulser(NXpulser_apm):
        pulse_mode:
          enumeration: ["laser", "high_voltage", "laser_and_high_voltage"]
        laser_pulser(NXsource):
          exists: optional
          doc: "Atom probe microscopes use controlled laser, voltage, or a combination of pulsing strategies to trigger the excitation and eventual field evaporation/emission of an ion in an atom probe microscopy experiment.
          # Many microscopes have a laser installed which enables measurements also with poorly conductive specimens."
          name:
            exists: recommended
            doc: "Given name."
          model:
            exists: recommended
            doc: "Given brand or model name by the manufacturer."
          serial_number:
            exists: recommended
            doc: "Given hardware name/serial number or hash identifier issued by the manufacturer."
          manufacturer_name:
            exists: recommended
            doc: "Given name of the manufacturer."
          wavelength(NX_FLOAT):
            doc: "Nominal wavelength of the laser radiation."
            unit: NX_WAVELENGTH
          power(NX_FLOAT):
            exists: recommended
            doc: "Average power of the laser source while illuminating the specimen."
            unit: NX_POWER
          pulse_energy(NX_FLOAT):
            exists: recommended
            doc: "Average (??) energy of the laser at peak of (each) ?? pulse."
            unit: NX_ENERGY
          (NXtransformations):
            exists: recommended
            doc: "Set of transformations which describe the geometry between how the laser focusing optics/pinhole-attached coordinate system is defined, how it has to be transformed so that it aligns with the specimen coordinate system. A right-handed Cartesian coordinate system, the so-called laser space, should be assumed, whose positive z-axis points into the direction of the propagating laser beam."
        laser_beam(NXbeam):
          exists: optional
          doc: "Details about specific positions along the focused laser beam which illuminates the atom probe specimen."
          pinhole_position(NXcollection):
            exists: recommended
            doc: "Track time-dependent settings over the course of the measurement where the laser beam exits the focusing optics."
          spot_position(NXcollection):
            exists: recommended
            doc: "Track time-dependent settings over the course of the measurement where the laser hits the specimen."
        pulse_frequency(NX_NUMBER):
          doc: "Frequency with which the high voltage or laser pulser fires."
          unit: NX_FREQUENCY
        pulse_fraction(NX_NUMBER):
          doc: "Fraction of the pulse_voltage that is applied in addition to the standing_voltage at peak voltage of a pulse."
          unit: NX_UNITLESS
        pulsed_voltage(NX_FLOAT):
          exists: recommended
          doc: "NEED TO DISCUSS WITH APM COLLEAGUES IN MORE DETAIL WHAT THIS IS SPECIFICALLY!"
          unit: NX_VOLTAGE
          dimensions:
            rank: 1
            dim: [[1, Nions]]
        standing_voltage(NX_FLOAT):
          exists: recommended
          doc: "Direct current voltage between the specimen and the (local electrode) in the case of a LEAP instrument."
          unit: NX_VOLTAGE
          dimensions:
            rank: 1
            dim: [[1, Nions]]
      (NXstage_lab):
        # NEW ISSUE: consider more detailed opportunities for specifying holders like cryo-controller holder, type of holder, material for pucks make a difference for studies which hunt for hydrogen signal, equally dwell time in buffer and load lock chamber and environmental transfer, the application definition does not account for this at the moment, would need a class representing stage and specimen holder hierarchy of the entire sample loading and transfer system and the contributions or not these components make wrt to contamination.
        design:
          exists: recommended
          doc: "Principal design of the stage."
        name:
          exists: recommended
          doc: "Given name."
        model:
          exists: recommended
          doc: "Given brand or model name by the manufacturer."
        serial_number:
          exists: recommended
          doc: "Given hardware name/serial number or hash identifier issued by the manufacturer."
        manufacturer_name:
          exists: recommended
          doc: "Given name of the manufacturer."
        description:
          exists: optional
          doc: "Ideally a link to a (globally persistent) unique identifier which documents or can be used to infer further details of the component. If such a resource is not available, use this field for a free-text description and describe further details to the stage."
        (NXtransformations):
          exists: optional
          doc: "Set of transformations which describe how the stage-affixed coordinate system is defined and how it has to be transformed so that it aligns with the specimen coordinate system."
        (NXpositioner):
          exists: optional
        base_temperature(NX_FLOAT):
          doc: "Average temperature at the specimen base, i.e. base temperature, during the measurement."
          unit: NX_TEMPERATURE
        # NEW ISSUE: base_temperature_time_profile(NXtime_data):
        # eventually replace NXtime_data with NXlog
        #  exists: recommended
        #  doc: "Base temperature (time) profile during the measurement. Use base_temperature if a nominal/average value suffices."
        #  will the symbols from NXtime_data be carried over, goes along the line of tommaso's comment:
        #  In order to extend existing base classes, would it make sense to add a function to yam2nxdl that, if a base class already exists, 
        #  the tool only appends the new fields? I think the issue of significant extensions of existing base classes will
        #  symbols:
        #    doc: The symbols used in the schema to specify e.g. dimensions of arrays.
        #    Nsnapshots: Number of values sampled
        #  event_time_zero(NX_DATE_TIME):
        #    exists: required
        #    doc: ISO8601 when time monitoring started.
        #  time(NX_NUMBER):
        #    exists: required
        #    doc: Offset to event_time_zero when a snapshot is taken.
        #    unit: NX_TIME
        #    dimensions:
        #      rank: 2
        #      dim: [[1, Nsnapshots]]
        #  base_temperature(NX_FLOAT):
        #    exists: required #means if an NXtime_data group is added it needs to be populated not only with time but also base_temperature data
        #    unit: NX_TEMPERATURE
        #    dimensions:
        #      rank: 1
        #      dim: [[2, Nsnapshots]]
      control_software(NXcollection):
        doc: "The majority of atom probe microscopes come from a single commercial manufacturer AMETEK (formerly Cameca). Their instruments are controlled via an(/a set) of integrated instrument control system(s) (APSuite/IVAS/DAVis). By contrast, instruments which were built by individual research groups such as of the French (GPM, Rouen, France), the Schmitz (Inspico, Stuttgart, Germany), the Felfer (Oxcart, Erlangen, Germany), the Northwestern (D. Isheim, Seidman group et al.), or the PNNL group (Pacific Northwest National Laborary, Portland, Oregon, U.S.) have individual solutions to control the instrument. Some of which are modularized and open, some of which realize also integrated control units with portions of eventually undisclosed source code and (so far) lacking (support of)/open APIs. Currently, there is no accepted/implemented community-specific API for getting finely granularized access to such control settings. This motivates the current design of the application definition which stores quantities to begin with via an NXcollection. Holding heterogeneous, not yet standardized, but relevant pieces of information is the purpose of this collection."
        # NEW ISSUE: With new development pull fields out of this collection into dedicated groups.
        # might consider moving this to individual groups under (NXpump) or (NXchamber) groups.
        analysis_chamber(NXcollection):
          # symbols:
          #   Ntlogs: Number of time logs
          doc: "Track time-dependent settings over the course of the measurement about the environment in the analysis chamber such as gas pressure values etc."
          pressure(NX_FLOAT):
            doc: "Average pressure in the analysis chamber."
            unit: NX_PRESSURE
          # follow the example of base_temperature_time_profile
          # pressure_time_profile(NX_FLOAT):
          #  exists: recommended
          #  dimensions:
          #    rank: 2
          #    dim: [[2, Ntlogs]]
          #  unit: NX_ANY
        # buffer_chamber(NXcollection):
        #   doc: "Track time-dependent settings over the course of the measurement and loading about the environment in the buffer chamber such as gas pressure values etc."
        # load_lock_chamber(NXcollection):
        #   doc: Track time-dependent settings over the course of the measurement and loading about the environment in the load-lock chamber such as gas pressure values etc.
        # NEW ISSUE: activate eventually relevant fields in the buffer and load_lock chambers
      specimen_monitoring(NXcollection):
        exists: optional
        # NEW ISSUE: should be promoted to recommended at some point in particular with closer integration of APM and EM instruments
        doc: "A place where details about the initial shape of the specimen can be stored. Ideally, here also data about the shape evolution of the specimen can be stored. There are currently very few techniques only to measure the shape evolution: One is via correlative electron microscopy but this usually evolves an interrupted experiment in which the specimen is transferred, an image taken, and a new evaporation sequence initiated. Another, less accurate method, though, is to monitor the specimen evolution via the in-built camera system (if available) in the instrument. Another method is to use correlated scanning force microscopy methods (pioneered by the imec group, Belgium). A continuous monitoring of the specimen in an correlative electron microscopy/atom probe experiment is planned to be developed by the Jülich group (Dunin-Borkowski/Gault)."
        # NEW ISSUE: consider the above comments into new fields when important progress has been made.
        initial_radius(NX_FLOAT):
          doc: "Ideally measured or best elaborated guess of the initial radius of the specimen."
          unit: NX_LENGTH
        shank_angle(NX_FLOAT):
          doc: Ideally measured or best elaborated guess of the shank angle. This is a measure of the specimen taper. Define it in such a way that the base of the specimen is modelled as a conical frustrum so that the shank angle is the (shortest) angle between the specimen space z-axis and a vector on the lateral surface of the cone.
          unit: NX_ANGLE
        # NEW ISSUE: define e.g. radius(NX_FLOAT) and evaporation_id(NX_UINT) to store snapshots of the shape evolution of the specimen.
      ion_impact_positions(NXprocess):
        exists: optional  # at the moment only for groups which built their own instrument these fields can realistically be populated
        # NEW ISSUE: promote to recommended with further permeation of open hardware protocols
        doc: "This group in the hierarchy should be used to store the ion hit positions. Data post-processing step of analog-to-digital conversion of the detector signals into ion hit positions. For AMETEK LEAP instruments this processing takes place partly in the control unit of the detector partly in the software. The process is controlled by the acquisition/instrument control software (IVAS/APSuite/DAVis). The exact details are, at least in the case of AMETEK instruments, which applies to the majority of atom probe microscopes, kept proprietary and inaccessible. For instruments build by individual research groups, like the Oxcart instrument, individual timing data from the delay-line detector are openly accessible."
        program:
          doc: "Given name of the program that was used to perform this computation. Although for LEAP instruments this program is often the same software as one would specify under program for the NXentry (usually IVAS or AP Suite), the field is required because in cases where data is post-processed with different software it would not be possible to distinguish which portions of the dataset were computed with which software."
          \@version:
            doc: "Ideally program version plus build number, or commit hash or description of ever persistent resources where the source code of the program and build instructions can be found so that the program can be configured ideally in such a manner that the result of this computational process is recreatable in the same deterministic manner."
        arrival_time_pairs(NX_NUMBER):
          exists: recommended
          doc: "Three-dimensional array of raw readings from the analog-to-digital-converter timing circuits of the detector wires."
          # NEW ISSUE: discuss with Oxcart developers which modifications might be necessary here.
          unit: NX_TIME
          dimensions:
            rank: 3
            dim: [[1, 2], [2, Ndldwires], [3, Nions]]
        hit_positions(NX_FLOAT):
          doc: "Evaluated ion impact coordinates at the detector (either as computed from the arrival time data or as reported as the result of a not necessarily further specified processing within commercial control software."
          unit: NX_LENGTH
          dimensions:
            rank: 2
            dim: [[1, 2], [2, Nions]]
        detection_rate(NX_FLOAT):
          doc: "Average detection rate over the course of the experiment."
          unit: NX_DIMENSIONLESS
          # NEW ISSUE: follow the example of base_temperature_time_profile to monitor the temporal evolution of the detection_rate over the course of the evaporation sequence
          # detection_rate_time_profile(NX_FLOAT):
          #   doc: Spatio-temporal profile of the detection rate since the start of the measurement.
          # NEW ISSUE: discuss how to handle cases when we would like to store ideally an array where one dimensions is NX_TIME and the other one is e.g. NX_PERCENT 
      hit_multiplicity(NXprocess):
        # NEW ISSUE: use symbols to monitor number of pulses
        exists: recommended
        doc: "Data post-processing step which is, like the impact position analyses, also usually executed in the integrated control software. This processing yields how many ions were detected with each pulse. In fact, it is possible that multiple ions evaporate and hit the same or different pixels of the detector on the same pulse. These data form the basis to analyses of the so-called (hit) multiplicity of an ion. Multiplicity must not be confused with how many atoms of the same element or isotope, respectively, a molecular ion contains. By contrast, this latter multiplicity is encoded in the (isotope_vector) field within in a (NXion) instance."
        program:
          doc: "Given name of the program that was used to perform this computation. Similar comments as for ion_impact_positions apply."
          \@version:
            doc: "Ideally program version plus build number, or commit hash or description of ever persistent resources where the source code of the program and build instructions can be found so that the program can be configured ideally in such a manner that the result of this computational process is recreatable in the same deterministic manner."
        pulses_since_last_ion(NX_UINT):
          exists: optional
          doc: "Number of pulses since the last detected ion pulse. For multi-hit records, after the first record, this is zero."
          dimensions:
            rank: 1
            dim: [[1, Nions]]
          unit: NX_UNITLESS
        hit_multiplicity(NX_UINT):
          exists: recommended
          # NEW ISSUE: further discussions with members of the APM community is required to clarify this field and what it means
          doc: "Hit multiplicity."
          dimensions:
            rank: 1
            dim: [[1, Nions]]
          unit: NX_UNITLESS
        pulse_id(NX_UINT):
          # NEW ISSUE: I feel the name is misleading, the quantity is named like this de facto only because thats the jargon term used epos files.
          exists: optional
          doc: "Number of pulses since the start of the atom probe run/evaporation sequence."
          dimensions:
            rank: 1
            dim: [[1, Nions]]
          unit: NX_UNITLESS
      ion_filtering(NXprocess):
        exists: recommended
        doc: "Like impact position and hit multiplicity computations, ion filtering is a data post-processing step when users identify which of the detected ions should be included in the voltage-and-bowl correction. This post-processing is usually performed via GUI interaction in the reconstruction pipeline of commercial analysis software like IVAS/APSuite."
        program:
          doc: "Given name of the program that was used to perform this computation. Similar comments as to hit_multiplicity apply."
          \@version:
            doc: "Ideally program version plus build number, or commit hash or description of ever persistent resources where the source code of the program and build instructions can be found so that the program can be configured ideally in such a manner that the result of this computational process is recreatable in the same deterministic manner."
        evaporation_id_included(NX_BOOLEAN):
          doc: "Bitmask which is set to true if the ion is considered and false otherwise."
          dimensions:
            rank: 1
            dim: [[1, Nions]]
      voltage_and_bowl_correction(NXprocess):
        exists: recommended
        doc: "Data post-processing step to correct for ion impact position flight path differences, detector biases, and nonlinearities. Also this step is usually performed with commercial software."
        program:
          doc: "Given name of the program that was used to perform this computation. Similar comments as to ion_filtering apply."
          \@version:
            doc: "Ideally program version plus build number, or commit hash or description of ever persistent resources where the source code of the program and build instructions can be found so that the program can be configured ideally in such a manner that the result of this computational process is recreatable in the same deterministic manner."
        # NEW ISSUE: realistic is that currently scientists can pull always a calibrated time-of-flight but not necessarily unprocessed timing data from the detector (unless individuals built the instrument). Relevant for ranging are the calibrated data, thats why only these (as an intermediate/compromise solution) are required in this version of the application definition
        raw_tof(NX_FLOAT):
          exists: recommended
          doc: "Raw time-of-flight data as read-out from the acquisition software if these data are or accessible."
          unit: NX_TIME
          dimensions:
            rank: 1
            dim: [[1, Nions]]
        calibrated_tof(NX_FLOAT):
          # NEW ISSUE: which type of calibrations are applied is usually a modified sqrt tof to m/q mapping the exact parameter of which are for LEAP instruments not immediately accessible.
          doc: "Calibrated time-of-flight."
          unit: NX_TIME
          dimensions:
            rank: 1
            dim: [[1, Nions]]
        tof_calibration(NXcollection):
          exists: optional
          doc: "The key idea and algorithm of the voltage-and-bowl correction is qualitatively similar for instruments of different manufacturers or research groups. Specific differences exists though in the form of different calibration models. For now we do not wish to resolve or generalize these differences. Rather the purpose of this collection is to provide a container where model-specific parameters and calibration models can be stored if users know these for sure. For AMETEK LEAP systems this should be the place for storing initial calibration values. These values are accessible normally only by AMETEK service engineers and used by them for calibrating for the detector and instrument. Furthermore, one could then also store here the iteratively identified calibrations which scientists will get displayed in e.g. AP Suite while executing the voltage-and-bowl correction as part of the reconstruction pipeline."
          # NEW ISSUE: should be recommended as otherwise one cannot ensure that numerically the same voltage-and-bowl correction results are obtained (without knowning the parameters...)
      mass_to_charge_conversion(NXprocess):
        exists: recommended
        doc: "Data post-processing step in which calibrated time-of-flight data (tof) are interpreted into mass-to-charge-state ratios."
        program:
          doc: "Given name of the program that was used to perform this computation. Similar comments as voltage_and_bowl_correction apply."
          \@version:
            doc: "Ideally program version plus build number, or commit hash or description of ever persistent resources where the source code of the program and build instructions can be found so that the program can be configured ideally in such a manner that the result of this computational process is recreatable in the same deterministic manner."
        parameter(NXcollection):
          exists: recommended
          doc: "Like for the voltage-and-bowl correction, this collection should be used for storing vendor-specific calibration models if these are available."
        mass_to_charge(NX_FLOAT):
          doc: "Mass-to-charge-state ratios"
          unit: NX_ANY
          # \@units: "Da"
          dimensions:
            rank: 1
            dim: [[1, Nions]]
      reconstruction(NXprocess):
        exists: recommended
        doc: "Data post-processing step to create a tomographic reconstruction of the specimen based on selected calibrated ion hit positions, the evaporation sequence, and voltage curve data. Very often scientists use own software scripts according to published, so-called reconstruction protocols, i.e. numerical recipes how to compute x, y, z atomic positions from the input data."
        program:
          doc: "Given name of the program that was used to perform this computation. Similar comments as voltage_and_bowl_correction apply."
          \@version:
            doc: "Ideally program version plus build number, or commit hash or description of ever persistent resources where the source code of the program and build instructions can be found so that the program can be configured ideally in such a manner that the result of this computational process is recreatable in the same deterministic manner."
        protocol_name:
          exists: recommended
          doc: "Qualitative statement about which algorithmic approach, i.e. reconstruction protocol was used."
          enumeration: ["bas_original", "bas_modified", "geiser", "gault", "ivas", "apsuite", "other"]
        reconstructed_positions(NX_FLOAT):
          doc: "Three-dimensional reconstructed positions of the ions. Interleaved array of x, y, z positions in the specimen space."
          unit: NX_LENGTH
          dimensions:
            rank: 2
            dim: [[1, 3], [2, Nions]]
        reconstruction_parameter(NXcollection):
          exists: recommended
          # NEW ISSUE: the status here should be promoted to required but currently one needs to manually extract the reconstruction parameters
          # NEW ISSUE: for instance from commercial software, here a better strategy is needed how to document the reconstruction parameter.
          doc: "Different models and associated algorithms, i.e. (numerical) protocols exist to reconstruct atom probe data. Although these approaches are qualitatively similar, each protocol uses different parameters (and interprets these differently). The source code to IVAS/APSuite is not open. For now we store the reconstruction parameter in a collection."
          # NEW ISSUE: for AMETEK, as well as for the Bas, Geiser, and Gault protocols we know the usual naming of the parameters they should be added as optional quantities.
          # Therefore, it is difficult for now to generalize the meaning and idea behind all relevant reconstruction parameters. One could create a class for each reconstruction method, as these methods are de facto application definitions.
      ranging(NXprocess):
        exists: recommended
        doc: "Data post-processing step in which elemental, isotopic, and/or molecular identities are assigned to the ions. The documentation of these steps is based on ideas described in the literature (M. K\"uhbach et al. 2021, Microsc. Microanal.)."
        program:
          doc: "Given name of the program that was used to perform this computation. Apart from the classical approach to use AMETEK software for this processing step, a number of open-source alternative tools been designed for executing this task. Therefore, it is essential to document which tool was used."
          \@version:
            doc: "Ideally program version plus build number, or commit hash or description of ever persistent resources where the source code of the program and build instructions can be found so that the program can be configured ideally in such a manner that the result of this computational process is recreatable in the same deterministic manner."
        number_of_iontypes(NX_UINT):
          doc: "How many ion types are distinguished."
          unit: NX_UNITLESS
        maximum_number_of_atoms_per_molecular_ion(NX_UINT):
          doc: "Assumed maximum value that suffices to store all relevant molecular ions, even the most complicated ones. Currently a value of 32 is used."
          unit: NX_UNITLESS
        mass_to_charge_distribution(NXprocess):
          exists: recommended
          doc: "Specifies the computation of the mass-to-charge histogram. Usually mass-to-charge values are studied as an ensemble quantity, specifically these values are binned. The (NXprocess) stores the settings of this binning."
          program:
            doc: "Given name of the program that was used to perform this binning. If the computation is a integrated into the ranging tool, type ."
            \@version:
              doc: "Ideally program version plus build number, or commit hash or description of ever persistent resources where the source code of the program and build instructions can be found so that the program can be configured ideally in such a manner that the result of this computational process is recreatable in the same deterministic manner. If the version is the same as for the ranging tool, type ."
          range_minmax(NX_FLOAT):
            doc: "Smallest and largest mass-to-charge value."
            unit: NX_ANY
            # \@units: "Da"
            # NEW ISSUE: NX_ATOMIC_MASS_UNIT use Tommasso scheme here Da
            dimensions:
              rank: 1
              dim: [[1, 2]]
          range_increment(NX_FLOAT):
            doc: "Binning width"
            unit: NX_ANY
            # \@units: "Da"
            # NEW ISSUE: unit must match with range, is Da
        background_quantification(NXprocess):
          exists: recommended
          doc: "Details of the background model which was used to correct the total counts per bin into used counts."
          program:
            doc: "Given name of the program that was used to perform the background quantification. If the computation is a integrated into the ranging tool, type ."
            \@version:
              doc: "Ideally program version plus build number, or commit hash or description of ever persistent resources where the source code of the program and build instructions can be found so that the program can be configured ideally in such a manner that the result of this computational process is recreatable in the same deterministic manner. If the version is the same as for the ranging tool, type ."
          # NEW ISSUE: add parameters of the background model in an e.g. NXcollection as these are specific to every background model
        peak_search_and_deconvolution(NXprocess):
          exists: recommended
          doc: "How where peaks in the background-corrected mass-to-charge histogram identified."
          # NEW ISSUE: touching upon i.e. research activities by Andrew London and coworkers substantiating the need for a clearer description how peak/signals were eventually processed via deconvolution methods
          program:
            doc: "Given name of the program that was used to search and detect peaks. If the computation is a integrated into the ranging tool type ."
            \@version:
              doc: "Ideally program version plus build number, or commit hash or description of ever persistent resources where the source code of the program and build instructions can be found so that the program can be configured ideally in such a manner that the result of this computational process is recreatable in the same deterministic manner. If the version is the same as for the ranging tool, type ."
          (NXpeak):
            exists: optional
            doc: "List of peaks."
            # symbols:
            #   doc: "The symbols used in the schema to specify e.g. dimensions of arrays."
            #  Nsupport: "Number of support points"
            # if only one symbol table is allowed then you cannot have multiple NXpeak instances in the same NeXus file whose Nsupport differs?
            label:
              exists: optional
              doc: "Human-readable identifier to specify which concept/entity the peak identifies."
            peak_model:
              doc: "Is the peak described analytically via a functional form or is it described empirically via measured/reported intensity/counts as a function of an independent variable."
              enumeration: ["empirical", "gaussian", "lorentzian"]
            position(NX_NUMBER):
              doc: "In the case of an empirical description of the peak and its shoulders, this array holds the positions were independent variable values were taken."
              unit: NX_ANY
              dimensions:
                rank: 1
                dim: [[1, Nsupport]]
            intensity(NX_NUMBER):
              doc: "In the case of an empirical description of the peak and its shoulders, this array holds the intensity/count values at each position."
              unit: NX_ANY
              dimensions:
                rank: 1
                dim: [[1, Nsupport]]
            (NXcollection):
              exists: optional
              doc: "In the case of an analytical description this group can be used to hold parameter of the functional form. For example in the case of Gaussian peaks mu, sigma, and cut-off values and background intensity."
        peak_identification(NXprocess):
          exists: recommended
          doc: "Details about how peaks, with taking into account error models, were interpreted as an iontype or not."
          program:
            doc: "Given name of the program that was used to perform identify peaks. If the computation is a integrated into the ranging tool, type ."
            \@version:
              doc: "Ideally program version plus build number, or commit hash or description of ever persistent resources where the source code of the program and build instructions can be found so that the program can be configured ideally in such a manner that the result of this computational process is recreatable in the same deterministic manner. If the version is the same as for the ranging tool, type ."
          (NXion):
            exists: optional
            doc: "The individual ions and their set of mass-to-charge intervals (ranges). If ranging was performed as a computational step then the NeXus-writing software needs to assure that there is always a default ion type which is the unknown ion type. By definition this unknown type has 0 as the id and a default associated mass-to-charge-state ratio interval of [0, 0.001] Da."
            # symbols:
            #   doc: "The symbols used in the schema to specify e.g. dimensions of arrays."
            #   Nivecmax: "Maximum number of allowed atoms per (molecular) ion (fragment). Needs to match maximum_number_of_atoms_per_molecular_ion."
            #   Nranges: "Number of mass-to-charge-state-ratio range intervals mapped on this ion type."
            ion_type(NX_UINT):
              doc: "Ion type (ion species) identifier. The identifier zero is reserved for the special unknown ion type."
              unit: NX_UNITLESS
            isotope_vector(NX_UINT):
              doc: "A vector of isotope hash values. These values have to be stored in a decreasingly sorted array. The array is filled with zero hash values indicating unused places. The individual hash values are built with the following hash function: Hashvalue = Z + N*256 with Z the number of protons and N the number of neutrons of the isotope respectively. Z and N have to be 8-bit unsigned integers."
              unit: NX_UNITLESS
              dimensions:
                rank: 1
                dim: [[1, Nivecmax]]
            charge_state(NX_INT):
              exists: recommended
              doc: "Signed charge state of the ion in multiples of the elementary electron charge. Only positive values will be measured in atom probe microscopy as the ions are accelerated by a negatively signed bias electric field. In the case that the charge state is not explicitly recoverable, the value should be set to zero. This is for example the case when using classical range file formats like RNG, RRNG for atom probe data. These file formats do not document the charge state explicitly but report an integer with the atom type which can be used to compute the charge state via the theoretically-known mass-to-charge-state-ratios of the elements."
              unit: NX_DIMENSIONLESS
            name(NX_CHAR):
              exists: optional
              doc: "Human-readable ion type name (e.g. Al +++), i.e. ASCII UTF-8 character array, ideally using LaTeX notation to specify the ion and charge state. Examples are 12C+ or Al+++. Although this name may be human-readable and intuitive, parsing such names becomes impractical for more complicated cases. Therefore, the isotope_vector should be the preferred machine-readable format in use."
            mass_to_charge_range(NX_FLOAT):
              doc: "Associated lower (mqmin) and upper (mqmax) bounds of mass-to-charge-state ratio interval(s) [mqmin, mqmax] (boundaries included) for which the respective ion is labelled as an ion of the here referred to ion_type."
              unit: NX_ANY
              # \@units: "Da"
              dimensions:
                rank: 2
                dim: [[1, 2], [2, Nranges]]
      # NEW ISSUE: design for each processing step a customized NXapm_process_<name> base class
      # for clustering it could include the following entries:
      # clustering(NXprocess):
      #   exists: optional
      #   doc: to be defined 
      #   evaporation_id_included(NX_BOOLEAN):
      #     doc: Bitmask if ion is to be considered or not
      #     dimensions:
      #       rank: 1
      #       dim: [[1, Nions]]
      #   feature_id(NX_UINT):
      #     exists: recommended
      #     doc: In case of running a clustering analysis on the entire dataset we might add a label which specifies to which microstructural feature (e.g.) the ion belongs. The value zero is reserved to flag that an ion does not belong to a feature. Therefore, feature identifiers start at 1. #later we could add at some value.
      #     unit: NX_UNITLESS
      #     dimensions:
      #       rank: 1
      #       dim: [[1, Nions]]
