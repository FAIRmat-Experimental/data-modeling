# base class to define properties of a layer
#
# Here we describe one step in a preparation process
# Sample description itself belongs to the application definition
# Pepe Marquez, containing elements of layer deifnition in Kameleont by H.N. and P.B.

category: base
doc: "Draft base class to describe a layer"

LAYER:
  id: 
    doc: id for the layer.
    type: str
  layer_type: substrate
    doc: the type of layer. i.e. 'absorber', 'substrate', 'metal_contact'.
    type: str
  layer_name: 
    doc: A given name for the layer. i.e. 'Fused quartz glass by Weidner'
    type: str
  creation_datetime:
    doc: the creation time of the layer. i.e. '2021-08-10T11:26:48.014543'
    type: datetime
  position: 0
    doc: Position of a layer within a stack
    type: int
  properties:
    physical:
      substrate_size:
        doc: "if the substrate is circular, use this as diam. If not, use the next two fields"
        type: float
        unit: m
      substrate_width:
        doc: "for a rectangular substrate, use this for one dimension"
        type: float
        unit: m
      substrate_length:
        doc: "for a rectangular substrate, use this for one dimension"
        type: float
        unit: m
      thickness:
        doc: The thickness of the layer
        unit: m
        # source: supplier
    compositional:
      elements:
        doc: list of elements present in the layer. i.e. ['Si', 'O']
        type: str
      reduced_formula:
        doc: The reduced chemical formula for a structure as a string with element symbols and
             integer chemical proportion numbers. The proportion number MUST be omitted if it is 1.
             e.g. 'SiO2'        
        type: str
    structural:
      cristalline: 
        doc: Whether or not the materials in the layer present crystalline properties.
             i.e. `false` for amorphous materials
        type: bool 
      space_group_number:
        doc: Specifies the International Union of Crystallography (IUC) number of the 3D space
             group of this system.
        type: int 
      lattice params:
            a:
              doc: Length of the first basis vector.
              type: float
              unit: m,
              description: Length of the first basis vector.
            b:
              doc: Length of the first basis vector.
              type: float
              unit: m,
              description: Length of the first basis vector.
            c:
              doc: Length of the first basis vector.
              type: float
              unit: m,
              description: Length of the first basis vector.
            alpha:
              doc: Angle between second and third basis vector.
              type: float
              unit: degree,
              description: Length of the first basis vector.
            beta:
              doc: Angle between first and third basis vector.
              type: float
              unit: degree,
              description: Length of the first basis vector.
            gamma:
              doc: Angle between first and second basis vector.
              type: float
              unit: degree,
              description: Length of the first basis vector.
    optoelectronic:  # putting here also purely electric properties
      bandgap:
        doc: Bandgap value of the layer.
        type: float
        unit: eV
      bandgap_origin:
        doc: Description or link to how the bangdap is derived or where is derived from.
        type: str
      absorption_coefficient:
        doc: Absorption coefficient array.
        shape: [photon_energy_array]  # not sure how we are supposed to define shapes here yet. 
        type: float
        unit: m**(-1)
      refractive_index:
        doc: Refractive index of the compounds in the layer
        type: float
      sheet_resistance:
        doc: Measure of resistance in thin film that are nominally uniform in thickness
        type: float
        unit: ohm
      conductivity_type:
        doc: Conductivity type of the compound
        type: Enum('n-type', 'p-type', 'intrinsic', 'unknown')  # fell free to add more options
      # TODO: instrinsic_carrier_concentration, majority_carrier_concentration...


