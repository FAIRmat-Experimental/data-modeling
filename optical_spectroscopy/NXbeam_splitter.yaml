# A draft of a new base class to describe a beam splitting device.

category: base
symbols:
  N_spectrum: |
    Length of the spectrum vector (e.g. wavelength or energy) for which the
    refractive index of the beam splitter material and/or coating is defined.
  N_spectrum_RT: |
    Length of the spectrum vector (e.g. wavelength or energy) for which the
    reflectance or transmission of the beam splitter is given.
  N_shapepar: |
    Number of parameters needed do descripe the shape of the beam splitter.
  N_objects: |
    Number of objects the beam splitter is made up of.
  N_outputs: |
    Number of outputs, i.e. number of paths the beam takes after being split by
    the beam splitter.

doc: |
  A beam splitter, i.e. a device splitting the light into two or more beams.

  Information about types and properties of beam splitters is provided e.g.
  [here](https://www.rp-photonics.com/beam_splitters.html).

  Use two or more NXbeam_paths to describe the beam paths after the beam
  splitter. In the dependency chain of the new beam paths, the first elements
  each point to this beam splitter, as this is the previous element.

(NXbeam_splitter):
  type: 
    exists: required
    doc: |
      Specify the beam splitter type (e.g. dielectric mirror, pellicle,
      dichroic mirror etc.). Shape (e.g. prism, plate, cube) and dimension
      should be described in 'geometry'. Define if the beam splitter is
      polarizing or not in the field 'polarizing(NX_BOOLEAN)'.
    enumeration: 
      [
        "dichroic mirror",
        "dielectric mirror",
        "metal-coated mirror",
        "Nicol prism",
        "Glan-Thompson prism",
        "pellicle mirror",
        "Polka dot beam splitter",
        "fiber optic splitter",
        "other"
      ]
    # ??? Are there any other common types of beam splitters ???
  other_type:
    doc: |
      If you selected 'other' in 'type' use this field to specify which type of
      beam splitter was used.

  polarizing(NX_BOOLEAN):
    exists: required
    doc: Is the beam splitter polarizing?

  multiple_outputs(NX_BOOLEAN):
  # ??? Redundant because number of outputs is defined by N_outputs ???
    exists: required
    doc: |
      Does the beam splitter have multiple outputs (diffractive optical
      element), i.e. more than two outputs?
    
  (NXshape):
    exists: recommended
    doc: |
      Describe the geometry (shape, dimension etc.) of the beam splitter.
      Specify the dimensions in 'SHAPE/size'. A sketch of the device should be
      provided in the 'sketch(NXdata)' field to clarify (i) the shape and
      dimensions of the device, and (ii) the input and outputs (i.e. the
      direction of the incoming and outcoming (split) beams).
    # Specify the length and height if the surface facing the incident
    # beam is a square or rectangle. Otherwise, if the device has a round
    # geometry (disc), sepcify the diameter instead.
    # The thickness or depth of the device should be defined in 'depth',
    # while the thickness of the substrate and coating should be specified
    # in 'substrate/substrate_thickness' and 'coating/coating_thickness'.
    shape:
      doc: Describe the shape (plate, cube, wedged, prism etc.).
      enumeration:
        [
          cube,
          cylinder,
          plate,
          prism,
          wedged,
          other
        ]
    other_shape:
      doc: If you chose 'other' in 'shape' describe what it is.
    sketch(NXdata):
      doc: |
        Sketch of the beam splitter showing its geometry. The paths of the
        incoming and split beam should be illustrated and labelled (0 for the
        incoming beam, and 1, 2,..., N_outputs for the outputs (i.e. the split
        beam paths)).
    size:
      doc: |
        Physical extent of the beam splitter device. The beam splitter might be
        made up of one or more objects (NX_objects). The meaning and location
        of the axes used will vary according to the value of the 'shape'
        variable. 'N_shapepar' defines how many parameters:

        * For 'cube' the parameters are (width, length).
        * For 'cylinder' the parameters are (diameter, length).
        * For 'plate' the parameters are (width, height, length).
        * For 'prism' the parameters are (width, height, length).
        * For 'wedged' the parameters are (width, height, shortest length).
          The wedge angle should be provided in 'SHAPE/wedge_angle'.
        * For 'other' the parameters may be (A, B, C, ...) with the labels
          defined in the sketch plotted in 'SHAPE/sketch'.
      dimensions:
        rank: 2
        dim:
          [
            [1, N_objects],
            [2, N_shapepar]
          ]
    wedge_angle(NX_FLOAT):
      doc: Wedge angle if 'shape' is 'wedged'.
      unit: NX_ANGLE
    # width, height, diameter, depth: Should we use 'size' in NXshape instead?
    # width(NX_FLOAT):
    #   doc: |
    #     Width of the device's surface facing the incident beam if the surface
    #     is square or rectangular (e.g. is shape is a cube).
    #   unit: NX_LENGTH
    # height(NX_FLOAT):
    #   doc: |
    #     Height of the device's surface facing the incident beam if the surface
    #     is square or rectangular (e.g. is shape is a cube).
    #   unit: NX_LENGTH
    # diameter(NX_FLOAT):
    #   doc: |
    #     Diameter of the device's surface facing the incident beam if the
    #     surface has circular geometry (e.g. is shape is a cylinder).
    #   unit: NX_LENGTH
    # length(NX_FLOAT):
    #   doc: |
    #     Specify the length of the beam splitter. If the device has a wedged
    #     shape provide the minimum and maximum length of the device.
    #     Otherwise, if the beam splitter has a homogeneous thickness, the two
    #     values are equal.
    #   dimensions:
    #     rank: 1
    #     dim: [[1,2]]

  splitting_ratio(NX_NUMBER):
    doc: |
      Beam splitting ratio(s) for the various outputs (i.e. the
      paths of the beam after being split by the beam splitter).
      The order of the ratios must be consistent with the labels 
      1, 2, ... N_outputs defined by the sketch in 'SHAPE/sketch', starting with 1.
    unit: NX_UNITLESS
    dimensions:
      rank: 1
      dim: [[1, N_outputs]]

  clear_aperture(NX_FLOAT):
    doc: |
      Clear aperture of the device (e.g. 90% of diameter for a disc, or 90% of
      length and height for square geometry).
    unit: NX_UNITLESS
    # ??? Would it be better to provide the clear aperture as length ???

  substrate(NXsample):
    doc: |
      Substrate of the beam splitter. Describe the material of the substrate in
      substrate/substrate_material and provide its index of refraction in
      substrate/index_of_refraction_substrate, if known.
    substrate_material:
      doc: |
        Specify the material of the beam splitter. If the device has a coating
        it should be described in coating/coating_material. Is the material
        birefringent?
    substrate_thickness(NX_FLOAT):
      doc: |
        Thickness of the beam splitter substrate. Define the minimum and
        maximum thickness (for a wedged geomtry). For a homogeneous thickness
        (e.g. as in plate beam splitters) the minimum and maximum values are
        equal.
      unit: NX_LENGTH
      dimensions:
        rank: 1
        dim: [[1,2]]
    index_of_refration_substrate(NX_FLOAT):
      doc: |
        Complex index of refraction of the beam splitter substrate. Specify at
        given spectral values (e.g. wavelength, energy, wavenumber etc.).
      unit: NX_UNITLESS
      dimensions:
        rank: 2
        dim:
          [
            [1, 2],
            [2, N_spectrum]
          ]

  coating(NXsample):
    doc: |
      Is the beam splitter coated? If yes, specify the type and material of the
      coating and the spectral range for which it is designed. If known, you
      may also provide its index of refraction. For a beam splitter cube
      consisting of two prisms which are glued together, you may want to
      specify the the glue and the coatings of each prism.
    coating_type:
      doc: |
        Specify the coating type (e.g. dielectric, anti-reflection (AR),
        multilayer coating etc.).
    coating_material:
      doc: Specify the coating material.
    coating_thickness(NX_FLOAT):
      doc: Thickness of the coating.
      unit: NX_LENGTH
    wavelength_range_coating(NX_FLOAT):
      exists: recommended
      doc: |
        Wavelength range for which the coating is designed. Enter the minimum
        and maximum values of the wavelength range.
      unit: NX_WAVELENGTH
      dimensions:
        rank: 1
        dim: [[1,2]]
    index_of_refraction_coating(NX_FLOAT):
      doc: |
        Complex index of refraction of the coating. Specify at given spectral
        values (e.g. wavelength, energy, wavenumber etc.).
      unit: NX_UNITLESS
      dimensions:
        rank: 2
        dim: 
          [
            [1, 2],
            [2, N_spectrum]
          ]
  
  wavelength_range(NX_FLOAT):
    exists: recommended
    doc: |
      Wavelength range for which the beam splitter is designed. Enter the
      minimum and maximum values of the wavelength range. Alternatively, or
      additionally, you may define the wavelength range for the coating in
      coating/wavelength_range_coating.
    unit: NX_WAVELENGTH
    dimensions:
      rank: 1
      dim: [[1, 2]]
  
  optical_loss(NX_NUMBER):
    doc: |
      Optical loss of the beam splitter for the various outputs (i.e. the paths
      of the beam after being split by the beam splitter).
      The order of the ratios must be consistent with the labels 
      1, 2, ... N_outputs defined by the sketch in 'SHAPE/sketch', starting
      with 1.
    unit: NX_UNITLESS
    dimensions:
      rank: 1
      dim: [[1, N_outputs]]

  incident_angle(NX_NUMBER):
    doc: Optimized angle of incidence for the desired splitting ratio.
    unit: NX_ANGLE

  deflection_angle(NX_NUMBER):
  # is this really needed?
    doc: |
      Angle of deflection corresponding to the optimized angle of incidence
      defined in incident_angle.
    unit: NX_ANGLE

  AOI_range(NX_NUMBER):
    doc: |
      Range of the angles of incidence (AOI) for which the beam splitter can be
      operated. Specify the minimum and maximum angles of the range.
    unit: NX_ANGLE
    dimensions:
      rank: 1
      dim: [[1, 2]]
  # Aren't some beamsplitters defined for specific angles? Should we instead
  # use dim: [[1,N_angles]], N_angles being the number of angles for which the
  # beam splitter can be operated? 
  # If this is the case for some devices, we might also have to define a field
  # for the corresponding defelction angles...
    
  reflectance(NX_FLOAT):
    doc: |
      Reflectance of the beam splitter at given spectral values.
    unit: NX_UNITLESS
    dimensions:
      rank: 1
      dim:
        [
          [1, N_spectrum_RT]
        ]

  transmission(NX_FLOAT):
    doc: |
      Transmission at given spectral values for the various outputs (i.e. the
      paths of the beam after being split by the beam splitter).
      The order of the ratios must be consistent with the labels 
      1, 2, ... N_outputs defined by the sketch in 'SHAPE/sketch', starting
      with 1.
    unit: NX_UNITLESS
    dimensions:
      rank: 2
      dim: 
        [
          [1, N_outputs],
          [2, N_spectrum_RT]
        ]
  
