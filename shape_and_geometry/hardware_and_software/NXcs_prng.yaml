category: base
(NXcs_prng):
  doc: |
    A base class to represent metadata of an pseudo-random number generator.
    
    The purpose of such metadata is to identify if exactly the same sequence
    can be reproduced, like for a PRNG or not (for a true physically random source).
  type:
    doc: "Different approaches for generating random numbers with a computer exists. Some use a dedicated physical device where the state is unpredictable (physically), some use a mangling of the system clock (system_clock), where also without additional pieces of information the sequence is not reproducible. Frequently so-called pseudo-random number generator (PRNG) are used. These are algorithms which yield a deterministic sequence of practically randomly appearing numbers. These algorithms different in their quality in how close the resulting sequences are random. Nowadays one of the most commonly used algorithm is the MersenneTwister (mt19937)."
    enumeration: [physical, system_clock, mt19937, other]
  program:
    doc: "Name of the PRNG implementation and version. If such information is not available or if the PRNG type was set to other the DOI to the publication or the source code should be given."
    \@version:
      doc: "Version and build number, or commit hash."
  seed(NX_UINT):
    doc: "Parameter of the PRNG controlling its initialization and thus the specific sequence of numbers it generates."
    unit: NX_UNITLESS
  warmup(NX_UINT):
    doc: "Number of initial draws from the PRNG which are discarded in an effort to equilibrate the sequence and make it thus to statistically more random. If no warmup was performed or if warmup procedures are unclear, users should set the value to zero." # reformulate last part of the first sentence
  # one could add spectral properties but this is usually well documented in the PRNG literature
  # one could also think about making reference to the NIST PRNG test suite to qualify the PRNG
